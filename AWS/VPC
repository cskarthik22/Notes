IAM Policy Ninja - https://www.youtube.com/watch?v=Du478i9O_mc&list=PLuI1Y8zL2B-qAAAXQhUm9ttXEz2hNu1gh

VPC 
- Its a virtual data center in the cloud
- It is a logical data center in AWS, consists of IGW's / Virtual Private Gateways, Route tables, Subnets, 
  Network Access Control lists, Security Groups ...etc
- 1 Subnet = 1 Availability Zone
- Security Groups are STATEFUL ( if inbound ports are opened then corresponding outbound ports are opened automatically).
- NACL are STATELESS ( means we need to explicitly open both inbound & outbound ports)
- No Transivity Peering
- Default VPC has
   a) Subnets / Avaialbility zones
   b) Routable 
   c) Default Internet gateways
++++++++++++++++++++++++++++++
Example to build a Custom VPC
++++++++++++++++++++++++++++++
a) By default when a custom VPC is created, it creates
  - Default Routetable
  - Default NACL
  - Default Security Group
**Note: VPC is created in Multitenant mode ( means underlying Hardware is shared across different AWS Customers ).
        we have 2 modes default,dedicated.

b) Create Subnets
  - First 4 & Last IP addresses for each subnet are reserved
    1) Network Address
    2) Gateway
    3) DNS
    4) Reserver for future use
    5) BroadCast Address
  - Create 2 subnets ( Subnet-A, Subnet-B )
  - Default NACL is associated to Subnet-A & Subnet-B
  - Note: Subnet's are mapped to only one NACL.
  - NACL's can span across the subnets.
    
c) Create Internet Gateway
   - By default it is detached & needs to be attached to VPC.
   - 1 IGW = 1 VPC
d) Configure default Route tables ( ROUTE_TABLE_A) & Create new one
   - Default Route table has an entry to Allow Traffic from VPC CIDR block to Local (which allows communication across the AZ's).
   - Create a new custom Route table ( ROUTE_TABLE_B ) which is mapped to IGW.
   - Edit the ROUTE_TABLE_B make an additional entry by allowing traffic from internet
      Allow traffic from 0.0.0.0/0 to Default IGW.
   - Explicitly associate subnets to this default route table.  
   - The subnet which got mapped to new custom route table ROUTE_TABLE_B are called public subnets. Here we need to enable auto 
     assign public IP addresses.( Example: Subnet-B is public subnet )
   - The subnets which got mapped to above default route table ROUTE_TABLE_A are called private subnets.(Example: Subnet-A is 
     private )
e) Create EC2 instances
   - EC2-A created in Private subnet-A
   - EC2-B created in public subnet-B
   - Login to EC2-B and we can ssh to EC2-A, but from there when we do yum update... it gets timeout since it is not connected
     to IGW. And the only way to get access to Internet for EC2-B is via NAT Instances / NAT Gateways
   - Create a NAT instance in Public subnet & disable Source & Destination check option since it has to pass the IP packets.
     The best practise is to use NAT Gateway where AWS takes care of High Availability.
   - Edit the ROUTE_TABLE_A and add an entry to allow all traffic to NAT Instance / NAT Gateway
   - Again Now Login to EC2-B and ssh to EC2-A, from there run yum update -y . It works !!!!
 


Root User: AWS Account Owner is called super user / root user

- Root user logs in to aws web console & creates 3 different users with auto generated passwords
  John 
  Bob
  Mike
- Root user Creates 2 groups
  a) Administrator - User John is added 
  b) Finanace - User Bob & Mike are added 
- Root User can create a KMS Keys and provide access to User/Group/Role who can Manage & use KMS keys for encrypting/decrypting 
  AWS Resources ( Data at REST ).

Identities: It is just a user
Identity Store: Place were all identities are stored. e.g: Facebook, ActiveDirectory, Google ..etc
Identity Broker: It is a service, that takes all those identities present in the Identity store and joins to IAM 
(Indentity Access Management). And the service that allows to do that, is called Security Token Service.
Federation: It means joining all indentities present in Indentity store to IAM.





https://goto.docker.com/rs/929-FJL-178/images/Definitive_Guide_Docker_10202016.pdf 
http://docker-saigon.github.io/post/Docker-Internals/

Microservices: It is a group of homogenous containers working together to deliver a meaningful application

A Docker container is a lightweight, standalone executable package that contains everything it needs to run: code, runtime, 
system tools, system libraries – anything you can install on a server. By encapsulating and isolating everything in a container
, this guarantees that the container will always run the same, regardless of the environment it is running in.

Docker containers remove the dependencies between applications and their underlying infrastructure, providing new possibilities 
in portability and efficiency.

Containers are promising because they eliminate the dependencies between applications and infrastructure -- but they’re just a 
technology. Just like a hypervisor needs a layer of management around to be useful in the enterprise, containers need a 
platform to be truly effective at scale.

It’s a platform to build, secure and manage containerized applications in an enterprise environment. It’s more than just 
containers with orchestration and provisioning capability. A container platform can support secure software distribution, 
application lifecycle management, automation, and governance. It opens up opportunities to transform organizations.

https://www.youtube.com/watch?v=vQX5nokoqrQ&t=1450s
- Where should i live? - Scheduling
- How do i talk to other containers? - Networking at container level ( Flannel, Weave Net, Calico ...etc )
- How do i talk to the world? - Routing using Ingress Controller
- What happens if i get sick? - Recovery
- How do we version control deployment? - Helm

- Helm Chart defines a group of manifest files

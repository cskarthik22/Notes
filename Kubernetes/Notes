
- Pods are the fundamental units of deployment
- Each pod has one or more containers that may expose ports
- Each pod has a routable IP address assigned to it
- Pod Ip address may change during its life time
- Labels are used to logically identify pods that match specific criteria
- Replication Controller's selectors matches the pods based on the labels
- Replication Controllers maintain the desired count all the time
- Replica sets are the next level to Relication Controllers which uses Annotations instead of Labels/Selectors

- A service is an abstraction of logical set of pods defined by a policy
- It acts a intermeidary for the pods to talk each other
- 

- The DNS server watches the kubernetes API ( Kube-Master ) for new services that are created.
- The DNS server creates a set of DNS records for each service
- Services can be resolved by the name with in the same namespace
- Pods in other namespace can access the service by adding the namespace to the DNS path
  e.g: myService.myNamespace

Kube-Master

It consists of 3 main components
- API : Exposes REST API's to the consumers to talk to kubernetes cluster
- Controller
- Scheduler'

kubectl config view
kubectl config use-context <<ContextName>>
kubectl describe pod <<podname>>
kubectl describe node <<nodename>>
kubectl describe svc <<servicename>>
kubectl get nodes
kubectl get svc
kubectl get pods
kubectl create -f web-pod.yml -f web-rc.yml -f web-svc.yml ## to create pod,replication controller & services
kubectl apply -f web-svc.yml  ## to apply modified changes



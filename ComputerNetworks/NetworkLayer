                         Network Layer - Host to Host Connectivity
=============================================================================================
- IP is a Packet Stream protocol, which means every packet that is sent over network is counted by assigning with a number 
called Indentification Number.

                       Internet Header Format

   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |Version  |  IHL  |Type of Service|          Total Length         |  ROW 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |           Identification        |Flags|      Fragment Offset    |  ROW 2
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |  Time to Live   |    Protocol   |         Header Checksum       |  ROW 3
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                         Source Address                          |  ROW 4
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                      Destination Address                        |  ROW 5
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                      Options                    |    Padding    |  ROW 6
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

###################################### ROW2 ##################################################

- Every datagram is identified using Indentification Number
- Fragment Offset: The number of Data Bytes ahead of this fragment 
- Flags:
  a) DF - Do Not Fragment Flag:  If the datagram doesn't want to get fragmented then it is set to 1 ( which means it tells 
  router, please dont fragment this datagram ).

    Example: In the below example, 2 networks has different MTU & the router has to fragment the datagram 1000 to 500, but
    since DF is set to 1, it will simply discards the packet by sending an ICMP packet in return.

                                     DF=1           ____________
      Sender-MTU-1000       ---------------------> |   Router1  |  ----      Destination-MTU-500
         (Network 1)        <-----ICMP Packet----- |____________|             ( Network 2)

  b) MF - More Fragment: Indicates More fragments are following this fragment.
  
###################################### ROW3 ################################################## 

Each Router in the network maintains a routing table ( NetworkID,SubentMask, Interface) and each router in mapped to a default
router if networkID doesnt gets matched, due to this sometimes it might lead to deadlock

                       R3
                      / \
             ___  R1 /___\ R2
             
- TTL ( Time To Live ): this field restricts the no: of hops the datagram has to travel before it reaches the destination, 
else it should be discarded. This avoids deadloack
Example: TTL =3  & we have 3 router in middle
         
         Sender(TTL=3) ------------R1(TTL=2)-----------R2(TTL=1)-----------R3(TTL=0)----------Destination
         
         At R3 datagram reached maximum HOPS ( TTL=0). hence Router 3 discards the packet
         
- PROTOCOL: This field tells what kind of packet this datagram is holding. Usually IP datagram will have either 
ICMP/IGMP/UDP/TCP packets.
Scenario: If the buffer allocated at the router is full ( congestion ) & it cant accept any packets, then in such cases router 
has to intellegently decide which packet to discard.
example: 
 a) Incoming packet is ICMP, then Router can discard it immediately since its buffer is full.
 b) Incoming packet is TCP, then router has to check the buffer whether it has any packets other than TCP ( using this protocol field), then it will replace that with the incoming packet. 

Order in which packets get discarded
ICMP --> IGMP --> UDP --> TCP

**Note: If we have AUTHENTICATION HEADER then this protocol field will have value 51, which tells after IP Header , we have Authentication Header ( with in here it hold whether next section is TCP/UDP/IGMP/ICMP )


- HEADER CHECKSUM: It is used for error detection. Checksum is calculation on IP Header not on data at every router.
  Fields that change is Time To Live & When fragmentation is done: MF, DF, Total Length also get changed.

###################################### ROW 4 & 5 ################################################## 
Network Layer uses Logical addresses i.e IP address

             +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
             |   NTWID  | HOSTID  |                                       |  COMMENT                                         |
             +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
             |   Valid  | Valid   |  Valid IP Address                     |   Can be used as both source Ip & Destination IP |
             |   Valid  | All 0's |  NID                                  |   No SIP, NO DIP                                 |
             |   Valid  | All 1's |  DBA ( Directed Broad cast address )  |   No SIP, YES DIP                                |
             |   1      | All 1's |  LBA ( Limited Broad cast address     |                                                  |
             |          |         |   means broadcast with in a network)  |   No SIP, YES DIP                                |
             |   1      | All 0's |  NM/SM ( Network Mask or Subnet Mask )|   No SIP, YES DIP                                |
             |   0      | 1       |  Host with in a network               |   YES SIP, YES DIP                               |
             |   0      | 0 .     |  I dont have IP(when sender           |                                                  |
             |          |         |   doesnt know its address)            |    YES SIP, NO DIP                               |
             |   127    | Valid   |   Loop Back Address                   |    No SIP, YES DIP                               |
             ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
              
  ###################################### ROW 6 ##################################################    
- Options Field: This field can be used for the below scenarios
  a) Record Route: This filed records all the routers IP addresses that the packet has travelled to reach destination. 
  This field is used by the ISP & network administrators.   
      Example:      Sender ---R1 ----(R1,R2)------(R,R2,Destination)
  b) Source Routing: This field is used to set routers path in the packet, so that it travels in the same path specified.
  
      Example:      Sender[D,R4,R2,R1] ----- Router[D,R4,R2] ---- Router[D,R4] ----- D
      
  c) Padding: Used to make sure header length is always multiple of 4.
  
 
 *************************************************************************************************************************
  FRAGMENTATION
 *************************************************************************************************************************

MTU: Maximum amount of data that could sit in any datalink layer frame, that could be sent across the network

AL                                    [ Message/Data     ] ----------------> MESSAGE
TL                       [ TCP Header + Message/Data     ] ----------------> SEGMENT                           
NL          [  IP Header + ( TCP Segment came from TL )  ] ----------------> IP DATAGRAM                      
DL [ Header +  ( IP Datagram came from NL )              + TRAILER ] ------> FRAME


AL  - MESSAGE
TL  - MESSAGE + TCP HEADER => SEGMENT => { Segmentation [ SEGMENT1,SEGMENT2,SEGMENT3....] } ==> { [ MSS, MSS, MSS ....] }
NL  - MESSAGE + TCP HEADER + IP HEADER => DATAGRAM { FRAGMENTATION [ FRAGMENT1,FRAGMENT2...]} => { [ MTU, MTU, MTU ... ] }
DLL - HEADER + MESSAGE + TCP HEADER + IP HEADER + TRAILER => FRAME

Divide the Network layer datagram into parts so that every part/fragment can be sit into Datalink Layer MTU is called 
fragmentation

EXAMPLE: Sender sends a datagram of size 500 to other side of the network.
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
|      NETWORK1 ( Sender) MTU-520             |  ROUTER1                          |    NETWORK2 ( Destination ) 
|                                             |                                   |        MTU - 200
|++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
| a)  [ Data(500) + Header(20) ]              | Fragment1 = [Data(180)+Header(20)]| 
| Since other side of the network has MTU 200 | Fragment2 = [Data(180)+Header(20)]|  [140+20]==>[180+20]=>[180+20]
| means it cant take datagram of size         | Fragment3 = [Data(140)+Header(20)]|    100        100       100    ID#
| more than 200, this has to be divided into  | Note: Receiver has to know all 3  |    0          1         1       MF
| fragments of size 200 each inorder to       | belong to same Datagram, thats the|    360        180       0       OffSet#
| transfer it to destination                  | each fragment is identified using |    5          5      20/4=5     HeaderLen
|                                             | Identification Number             |    MF - Tells More Fragments following
|                                             | - Receiver knows the sequence of  |    Offset - No: of Bytes Ahead of it used
|                                             |   those fragments using Offset#   |    to identify sequennce during assembling
|                                             |                                   |    the fragments.
|
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Actually Header Length Size is 20 - 60 bytes, but IHL is given 4 bits means anything more than power(2,4)-1=15 cannot be 
represented in header. So we should use a scaling factor of 60/15 = 4. Similarly for Offset# the saling factor is 8.
Offset# should always be multiple of 8 so if needed remove few bytes and send them in another packet accordingly.

